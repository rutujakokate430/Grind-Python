LC: 7. Reverse Integer Medium

Given a signed 32-bit integer x, return x with its digits reversed. If reversing x causes the value to go outside the signed 32-bit integer range [-231, 231 - 1], then return 0.

Assume the environment does not allow you to store 64-bit integers (signed or unsigned).


Example 1:

Input: x = 123
Output: 321
Example 2:

Input: x = -123
Output: -321
Example 3:

Input: x = 120
Output: 21
 

Constraints:

-231 <= x <= 231 - 1

class Solution:
    def reverse(self, x: int) -> int:
        sign=-1 if x< 0 else 1
        x_abs= str(abs(x))
        reversed_num= x_abs[::-1]
        reversed_num= sign* int(reversed_num)

        if reversed_num< -2**31 or reversed_num> 2**31-1:
            return 0
        return reversed_num


### tc: o(n), N-Number of digits, O(Log n)- as the number of digits we process depends on number of digits in that numver
#### SC: O(N), strings of digits O(Log n)- as the number of digits we process depends on number of digits in that numver

