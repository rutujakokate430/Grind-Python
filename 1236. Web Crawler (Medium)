1236. Web Crawler (Medium)

# """
# This is HtmlParser's API interface.
# You should not implement it, or speculate about its implementation
# """
#class HtmlParser(object):
#    def getUrls(self, url):
#        """
#        :type url: str
#        :rtype List[str]
#        """

class Solution:
    def crawl(self, startUrl: str, htmlParser: 'HtmlParser') -> List[str]:
        def get_hostname(url):
            return url.split('/')[2]
        
        hostname= get_hostname(startUrl)
        queue= collections.deque([startUrl])
        visited= set([startUrl])

        while queue:
            url= queue.popleft()

            for next_url in htmlParser.getUrls(url):
                if get_hostname(next_url)== hostname and next_url not in visited:
                    visited.add(next_url)
                    queue.append(next_url)

        return visited



        
