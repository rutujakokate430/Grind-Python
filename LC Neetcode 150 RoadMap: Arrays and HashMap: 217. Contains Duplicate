LC Neetcode 150 RoadMap: Arrays and HashMap: 217. Contains Duplicate

#BruteForce:

class Solution:
    def containsDuplicate(self, nums: List[int]) -> bool:
        nums= sorted(nums)
        left, right=0, 1

        while right< len(nums):
            if nums[left]!=nums[right]:
                left+=1
                right+=1
            else:
                return True
        return False
            
## TC: O(2N)->n
## SC: O(n) coz we sorted

## Using Counter

class Solution:
    def containsDuplicate(self, nums: List[int]) -> bool:
        cnter= Counter(nums)
        for key, value in cnter.items():
            if value>=2:
                return True
        return False

## TC: O(n)
## SC: O(N)

## Hash Set

class Solution:
    def containsDuplicate(self, nums: List[int]) -> bool:
        seen=set()
        for rch in nums:
            if rch in seen:
                return True
            else:
                seen.add(rch)
            
        return False

## TC: SC: O(N)
