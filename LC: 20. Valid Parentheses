LC: 20. Valid Parentheses

Given a string s containing just the characters '(', ')', '{', '}', '[' and ']', determine if the input string is valid.

An input string is valid if:

Open brackets must be closed by the same type of brackets.
Open brackets must be closed in the correct order.
Every close bracket has a corresponding open bracket of the same type.
 

Example 1:

Input: s = "()"

Output: true

Example 2:

Input: s = "()[]{}"

Output: true

Example 3:

Input: s = "(]"

Output: false

Example 4:

Input: s = "([])"

Output: true

 

Constraints:

1 <= s.length <= 104
s consists of parentheses only '()[]{}'.


## solution

class Solution:
    def isValid(self, s: str) -> bool:
        stck=[]
        pair_set={"()", "[]", "{}"}

        for chr in s:
            if chr in "([{":
                stck.append(chr)
            elif not stck or stck.pop()+chr not in pair_set:
                return False 
        return not stck
            

            
